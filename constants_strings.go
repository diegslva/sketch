// Code generated by "stringer -type=ResizingType,LayerListExpandedType,BorderPosition,BorderLineCapStyle,BorderLineJoinStyle,FillType,PatternFillType,BlendMode,LineDecorationType,BooleanOperationType,CurveMode -output constants_strings.go constants.go"; DO NOT EDIT.

package sketch

import "fmt"

const _ResizingType_name = "ResizingType_StretchResizingType_PinToCornerResizingType_ResizeObjectResizingType_FloatInPlace"

var _ResizingType_index = [...]uint8{0, 20, 44, 69, 94}

func (i ResizingType) String() string {
	if i < 0 || i >= ResizingType(len(_ResizingType_index)-1) {
		return fmt.Sprintf("ResizingType(%d)", i)
	}
	return _ResizingType_name[_ResizingType_index[i]:_ResizingType_index[i+1]]
}

const _LayerListExpandedType_name = "LayerListExpandedType_CollapsedLayerListExpandedType_ExpandedTempLayerListExpandedType_Expanded"

var _LayerListExpandedType_index = [...]uint8{0, 31, 65, 95}

func (i LayerListExpandedType) String() string {
	if i < 0 || i >= LayerListExpandedType(len(_LayerListExpandedType_index)-1) {
		return fmt.Sprintf("LayerListExpandedType(%d)", i)
	}
	return _LayerListExpandedType_name[_LayerListExpandedType_index[i]:_LayerListExpandedType_index[i+1]]
}

const _BorderPosition_name = "BorderPosition_CenterBorderPosition_InsideBorderPosition_OutsideBorderPosition_Both"

var _BorderPosition_index = [...]uint8{0, 21, 42, 64, 83}

func (i BorderPosition) String() string {
	if i < 0 || i >= BorderPosition(len(_BorderPosition_index)-1) {
		return fmt.Sprintf("BorderPosition(%d)", i)
	}
	return _BorderPosition_name[_BorderPosition_index[i]:_BorderPosition_index[i+1]]
}

const _BorderLineCapStyle_name = "BorderLineCapStyle_ButtBorderLineCapStyle_RoundBorderLineCapStyle_Square"

var _BorderLineCapStyle_index = [...]uint8{0, 23, 47, 72}

func (i BorderLineCapStyle) String() string {
	if i < 0 || i >= BorderLineCapStyle(len(_BorderLineCapStyle_index)-1) {
		return fmt.Sprintf("BorderLineCapStyle(%d)", i)
	}
	return _BorderLineCapStyle_name[_BorderLineCapStyle_index[i]:_BorderLineCapStyle_index[i+1]]
}

const _BorderLineJoinStyle_name = "BorderLineJoinStyle_MiterBorderLineJoinStyle_RoundBorderLineJoinStyle_Bevel"

var _BorderLineJoinStyle_index = [...]uint8{0, 25, 50, 75}

func (i BorderLineJoinStyle) String() string {
	if i < 0 || i >= BorderLineJoinStyle(len(_BorderLineJoinStyle_index)-1) {
		return fmt.Sprintf("BorderLineJoinStyle(%d)", i)
	}
	return _BorderLineJoinStyle_name[_BorderLineJoinStyle_index[i]:_BorderLineJoinStyle_index[i+1]]
}

const _FillType_name = "FillType_SolidFillType_GradientFillType_PatternFillType_Noise"

var _FillType_index = [...]uint8{0, 14, 31, 47, 61}

func (i FillType) String() string {
	if i < 0 || i >= FillType(len(_FillType_index)-1) {
		return fmt.Sprintf("FillType(%d)", i)
	}
	return _FillType_name[_FillType_index[i]:_FillType_index[i+1]]
}

const _PatternFillType_name = "PatternFillType_TilePatternFillType_FillPatternFillType_StretchPatternFillType_Fit"

var _PatternFillType_index = [...]uint8{0, 20, 40, 63, 82}

func (i PatternFillType) String() string {
	if i < 0 || i >= PatternFillType(len(_PatternFillType_index)-1) {
		return fmt.Sprintf("PatternFillType(%d)", i)
	}
	return _PatternFillType_name[_PatternFillType_index[i]:_PatternFillType_index[i+1]]
}

const _BlendMode_name = "BlendMode_0BlendMode_1BlendMode_2BlendMode_3BlendMode_4BlendMode_5BlendMode_6BlendMode_7BlendMode_8BlendMode_9BlendMode_10BlendMode_11BlendMode_12BlendMode_13BlendMode_14BlendMode_15"

var _BlendMode_index = [...]uint8{0, 11, 22, 33, 44, 55, 66, 77, 88, 99, 110, 122, 134, 146, 158, 170, 182}

func (i BlendMode) String() string {
	if i < 0 || i >= BlendMode(len(_BlendMode_index)-1) {
		return fmt.Sprintf("BlendMode(%d)", i)
	}
	return _BlendMode_name[_BlendMode_index[i]:_BlendMode_index[i+1]]
}

const _LineDecorationType_name = "LineDecorationType_NoneLineDecorationType_OpenArrowLineDecorationType_ClosedArrowLineDecorationType_Bar"

var _LineDecorationType_index = [...]uint8{0, 23, 51, 81, 103}

func (i LineDecorationType) String() string {
	if i < 0 || i >= LineDecorationType(len(_LineDecorationType_index)-1) {
		return fmt.Sprintf("LineDecorationType(%d)", i)
	}
	return _LineDecorationType_name[_LineDecorationType_index[i]:_LineDecorationType_index[i+1]]
}

const (
	_BooleanOperationType_name_0 = "BooleanOperation_None"
	_BooleanOperationType_name_1 = "BooleanOperation_UnionBooleanOperation_SubtractBooleanOperation_IntersectBooleanOperation_Difference"
)

var (
	_BooleanOperationType_index_0 = [...]uint8{0, 21}
	_BooleanOperationType_index_1 = [...]uint8{0, 22, 47, 73, 100}
)

func (i BooleanOperationType) String() string {
	switch {
	case i == -1:
		return _BooleanOperationType_name_0
	case 1 <= i && i <= 4:
		i -= 1
		return _BooleanOperationType_name_1[_BooleanOperationType_index_1[i]:_BooleanOperationType_index_1[i+1]]
	default:
		return fmt.Sprintf("BooleanOperationType(%d)", i)
	}
}

const _CurveMode_name = "CurveMode_NoneCurveMode_StraightCurveMode_MirroredCurveMode_DisconnectedCurveMode_Asymmetric"

var _CurveMode_index = [...]uint8{0, 14, 32, 50, 72, 92}

func (i CurveMode) String() string {
	if i < 0 || i >= CurveMode(len(_CurveMode_index)-1) {
		return fmt.Sprintf("CurveMode(%d)", i)
	}
	return _CurveMode_name[_CurveMode_index[i]:_CurveMode_index[i+1]]
}
